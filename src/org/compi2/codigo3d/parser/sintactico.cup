package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("T.T");
        System.err.println(s);
    }

:}

action code
{://Codigo de acciones
      
:}

terminal String ID, ENTERO, DECIMAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER,IG_IG,DIF,MENQ,MENIQ,MAYQ,MAYIQ,AND,OR,NOT;
nonterminal NodoC3D inicial, expresion;

precedence left OR;
precedence left AND;
precedence left NOT;
precedence left MENQ, MENIQ,MAYQ,MAYIQ,DIF,IG_IG;
precedence left MAS, MENOS;
precedence left MULT, DIV; 
precedence right POT; 

start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} expresion:exp 
                    {: 
                        
                        RESULT = exp;
                        
                        ControlC3D.agregarC3D("//Ãšltimo valor: " + exp.getCad());
                        ControlC3D.agregarC3D("\n"+"//Et.V Lx: " + exp.getEtiquetaTrue());
                        ControlC3D.agregarC3D("\n"+"//Et.F Ly: " + exp.getEtiquetaFalse());
                    :};

expresion   ::=NOT expresion:der
                    {: 
                        RESULT=der;
                        String tmpF=der.getEtiquetaFalse();
                        String tmpT=der.getEtiquetaTrue();
                        RESULT.setEtiquetaFalse(tmpT);
                        RESULT.setEtiquetaTrue(tmpF);
                    :}

            |expresion:izq AND {: ControlC3D.agregarC3D(izq.getEtiquetaTrue()+":");   :} expresion:der
                    {: 
                        RESULT= new NodoC3D("");
                        String temp= izq.getEtiquetaFalse()+":"+der.getEtiquetaFalse();
                        RESULT.setEtiquetaFalse(temp);
                        RESULT.setEtiquetaTrue(der.getEtiquetaTrue()+":");
                    :}
            |expresion:izq OR {: ControlC3D.agregarC3D(izq.getEtiquetaFalse()+":"); :} expresion:der
                    {: 
                        RESULT= new NodoC3D(""); 
                        String temp= izq.getEtiquetaTrue()+":"+der.getEtiquetaTrue();   
                        RESULT.setEtiquetaTrue(temp);
                        RESULT.setEtiquetaFalse(der.getEtiquetaFalse()+":");
                    :}
            |expresion:izq MENQ expresion:der
                    {: 

                        RESULT = new NodoC3D(""); 
                        RESULT.setEtiquetaTrue(ControlC3D.genEtiqueta());
                        RESULT.setEtiquetaFalse(ControlC3D.genEtiqueta());
                        ControlC3D.agregarC3D("if("+izq.getCad()+"<"+der.getCad()+") goto "+RESULT.getEtiquetaTrue()+"; \n");
                        ControlC3D.agregarC3D("goto "+ RESULT.getEtiquetaFalse()+ "; \n");

                      
                    :}
            
            |expresion:izq MENIQ expresion:der
                    {: 
                        RESULT = new NodoC3D(""); 
                        RESULT.setEtiquetaTrue(ControlC3D.genEtiqueta());
                        RESULT.setEtiquetaFalse(ControlC3D.genEtiqueta());
                        ControlC3D.agregarC3D("if("+izq.getCad()+"<="+der.getCad()+") goto "+RESULT.getEtiquetaTrue()+"; \n");
                        ControlC3D.agregarC3D("goto "+ RESULT.getEtiquetaFalse()+ "; \n");
                    :}
            |expresion:izq MAYQ expresion:der
                    {: 
                        RESULT = new NodoC3D(""); 
                        RESULT.setEtiquetaTrue(ControlC3D.genEtiqueta());
                        RESULT.setEtiquetaFalse(ControlC3D.genEtiqueta());
                        ControlC3D.agregarC3D("if("+izq.getCad()+">"+der.getCad()+") goto "+RESULT.getEtiquetaTrue()+"; \n");
                        ControlC3D.agregarC3D("goto "+ RESULT.getEtiquetaFalse()+ "; \n");
                    :}
            |expresion:izq MAYIQ expresion:der
                    {: 
                       RESULT = new NodoC3D(""); 
                        RESULT.setEtiquetaTrue(ControlC3D.genEtiqueta());
                        RESULT.setEtiquetaFalse(ControlC3D.genEtiqueta());
                        ControlC3D.agregarC3D("if("+izq.getCad()+">="+der.getCad()+") goto "+RESULT.getEtiquetaTrue()+"; \n");
                        ControlC3D.agregarC3D("goto "+ RESULT.getEtiquetaFalse()+ "; \n");
                    :}
            |expresion:izq DIF expresion:der
                    {: 
                       RESULT = new NodoC3D(""); 
                        RESULT.setEtiquetaTrue(ControlC3D.genEtiqueta());
                        RESULT.setEtiquetaFalse(ControlC3D.genEtiqueta());
                        ControlC3D.agregarC3D("if("+izq.getCad()+"!="+der.getCad()+") goto "+RESULT.getEtiquetaTrue()+"; \n");
                        ControlC3D.agregarC3D("goto "+ RESULT.getEtiquetaFalse()+ "; \n");
                    :}
            |expresion:izq IG_IG expresion:der
                    {: 
                        RESULT = new NodoC3D(""); 
                        RESULT.setEtiquetaTrue(ControlC3D.genEtiqueta());
                        RESULT.setEtiquetaFalse(ControlC3D.genEtiqueta());
                        ControlC3D.agregarC3D("if("+izq.getCad()+"=="+der.getCad()+") goto "+RESULT.getEtiquetaTrue()+"; \n");
                        ControlC3D.agregarC3D("goto "+ RESULT.getEtiquetaFalse()+ "; \n");
                    :}
            
            |expresion:izq MAS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " + " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MENOS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " - " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MULT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " * " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq DIV expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " / " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq POT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " ^ " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   MENOS expresion:exp 
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = - " + exp.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   PAR_IZQ expresion:exp PAR_DER   
                    {: RESULT = exp; :}
            |   ID:id           
                    {: RESULT = new NodoC3D(id); :}
            |   ENTERO:entero   
                    {: RESULT = new NodoC3D(entero); :}
            |   DECIMAL:decimal 
                    {: RESULT = new NodoC3D(decimal); :}
            ;